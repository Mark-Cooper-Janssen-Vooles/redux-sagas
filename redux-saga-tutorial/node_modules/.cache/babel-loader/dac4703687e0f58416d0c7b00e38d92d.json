{"ast":null,"code":"var _jsxFileName = \"/Users/mark/Desktop/code/redux-saga/redux-saga-tut/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getUsersRequest } from '../actions/users'; //when we get to the end of the function, there will be 'undefined'. If we put a while loop in there, it just loops back to the first return. \n// this is whats happening in the redux-sagas too, under the hood for e.g. takeEvery also has a while(true) loop going on.\n// function* testing() {\n//   while(true) {\n//     yield 1;\n//     yield 2;\n//     yield \"three\";\n//   }\n// }\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.props.getUsersRequest();\n  }\n\n  render() {\n    // const iterator = testing();\n    // console.log(iterator.next());\n    // console.log(iterator.next());\n    // console.log(iterator.next());\n    // console.log(iterator.next());\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, \"test\");\n  }\n\n}\n\nexport default connect(null, {\n  getUsersRequest\n})(App);","map":{"version":3,"sources":["/Users/mark/Desktop/code/redux-saga/redux-saga-tut/src/components/App.js"],"names":["React","Component","connect","getUsersRequest","App","constructor","props","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,QAA8B,kBAA9B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKA,KAAL,CAAWH,eAAX;AACD;;AAEDI,EAAAA,MAAM,GAAI;AACR;AACA;AACA;AACA;AACA;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAnByB;;AAsB5B,eAAeL,OAAO,CAAC,IAAD,EAAO;AAC3BC,EAAAA;AAD2B,CAAP,CAAP,CAEZC,GAFY,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {getUsersRequest} from '../actions/users';\n\n//when we get to the end of the function, there will be 'undefined'. If we put a while loop in there, it just loops back to the first return. \n// this is whats happening in the redux-sagas too, under the hood for e.g. takeEvery also has a while(true) loop going on.\n// function* testing() {\n//   while(true) {\n//     yield 1;\n//     yield 2;\n//     yield \"three\";\n//   }\n// }\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.props.getUsersRequest();\n  }\n\n  render () {\n    // const iterator = testing();\n    // console.log(iterator.next());\n    // console.log(iterator.next());\n    // console.log(iterator.next());\n    // console.log(iterator.next());\n\n    return (\n      <div className=\"App\">\n        test\n      </div>\n    );\n  }\n}\n\nexport default connect(null, {\n  getUsersRequest\n})(App);\n"]},"metadata":{},"sourceType":"module"}