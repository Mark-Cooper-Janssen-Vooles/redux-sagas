{"ast":null,"code":"var _jsxFileName = \"/Users/mark/Desktop/code/redux-saga/redux-saga-tut/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getUsersRequest, createUserRequest, deleteUserRequest } from '../actions/users';\nimport UsersList from './UsersList';\nimport NewUserForm from './NewUserForm';\nimport { Alert } from 'reactstrap'; //when we get to the end of the function, there will be 'undefined'. If we put a while loop in there, it just loops back to the first return. \n// this is whats happening in the redux-sagas too, under the hood for e.g. takeEvery also has a while(true) loop going on.\n// function* testing() {\n//   while(true) {\n//     yield 1;\n//     yield 2;\n//     yield \"three\";\n//   }\n// }\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = ({\n      firstName,\n      lastName\n    }) => {\n      this.props.createUserRequest({\n        firstName,\n        lastName\n      });\n    };\n\n    this.handleDeleteUserClick = userId => {\n      this.props.deleteUserRequest(userId);\n    };\n\n    this.props.getUsersRequest();\n  }\n\n  render() {\n    const users = this.props.users;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '0 auto',\n        padding: '20px',\n        maxWidth: '600px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      color: \"info\",\n      isOpen: this.state.visible,\n      toggle: this.onDismiss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"I am an alert\"), /*#__PURE__*/React.createElement(NewUserForm, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(UsersList, {\n      users: users.items,\n      onDeleteUser: this.handleDeleteUserClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default connect(({\n  users\n}) => ({\n  users\n}), {\n  getUsersRequest,\n  createUserRequest,\n  deleteUserRequest\n})(App);","map":{"version":3,"sources":["/Users/mark/Desktop/code/redux-saga/redux-saga-tut/src/components/App.js"],"names":["React","Component","connect","getUsersRequest","createUserRequest","deleteUserRequest","UsersList","NewUserForm","Alert","App","constructor","props","handleSubmit","firstName","lastName","handleDeleteUserClick","userId","render","users","margin","padding","maxWidth","state","visible","onDismiss","items"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,EAAyBC,iBAAzB,EAA4CC,iBAA5C,QAAoE,kBAApE;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,KAAR,QAAoB,YAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAC1BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAMnBC,YANmB,GAMJ,CAAC;AAACC,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,KAAD,KAA2B;AACxC,WAAKH,KAAL,CAAWP,iBAAX,CAA6B;AAC3BS,QAAAA,SAD2B;AAE3BC,QAAAA;AAF2B,OAA7B;AAID,KAXkB;;AAAA,SAanBC,qBAbmB,GAaMC,MAAD,IAAY;AAClC,WAAKL,KAAL,CAAWN,iBAAX,CAA6BW,MAA7B;AACD,KAfkB;;AAGjB,SAAKL,KAAL,CAAWR,eAAX;AACD;;AAaDc,EAAAA,MAAM,GAAI;AACR,UAAMC,KAAK,GAAG,KAAKP,KAAL,CAAWO,KAAzB;AAEA,wBACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,QAAT;AAAmBC,QAAAA,OAAO,EAAE,MAA5B;AAAoCC,QAAAA,QAAQ,EAAE;AAA9C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,OAAvC;AAAgD,MAAA,MAAM,EAAE,KAAKC,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAIE,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKZ,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAEM,KAAK,CAACO,KAAxB;AAA+B,MAAA,YAAY,EAAE,KAAKV,qBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AA9ByB;;AAiC5B,eAAeb,OAAO,CAAC,CAAC;AAACgB,EAAAA;AAAD,CAAD,MAAc;AAACA,EAAAA;AAAD,CAAd,CAAD,EAAyB;AAC7Cf,EAAAA,eAD6C;AAE7CC,EAAAA,iBAF6C;AAG7CC,EAAAA;AAH6C,CAAzB,CAAP,CAIZI,GAJY,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {getUsersRequest, createUserRequest, deleteUserRequest} from '../actions/users';\nimport UsersList from './UsersList';\nimport NewUserForm from './NewUserForm';\nimport {Alert} from 'reactstrap';\n\n//when we get to the end of the function, there will be 'undefined'. If we put a while loop in there, it just loops back to the first return. \n// this is whats happening in the redux-sagas too, under the hood for e.g. takeEvery also has a while(true) loop going on.\n// function* testing() {\n//   while(true) {\n//     yield 1;\n//     yield 2;\n//     yield \"three\";\n//   }\n// }\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.props.getUsersRequest();\n  }\n\n  handleSubmit = ({firstName, lastName}) => {\n    this.props.createUserRequest({\n      firstName,\n      lastName\n    });\n  };\n\n  handleDeleteUserClick = (userId) => {\n    this.props.deleteUserRequest(userId);\n  };\n\n  render () {\n    const users = this.props.users;\n\n    return (\n      <div style={{margin: '0 auto', padding: '20px', maxWidth: '600px'}}>\n        <Alert color=\"info\" isOpen={this.state.visible} toggle={this.onDismiss}>\n          I am an alert\n        </Alert>\n        <NewUserForm onSubmit={this.handleSubmit}/>\n        <UsersList users={users.items} onDeleteUser={this.handleDeleteUserClick} />\n      </div>\n    );\n  }\n}\n\nexport default connect(({users}) => ({users}), {\n  getUsersRequest,\n  createUserRequest,\n  deleteUserRequest\n})(App);\n"]},"metadata":{},"sourceType":"module"}