{"ast":null,"code":"var _jsxFileName = \"/Users/mark/Desktop/code/redux-saga/redux-saga-tut/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getUsersRequest } from '../actions/users';\nimport UsersList from './UsersList'; //when we get to the end of the function, there will be 'undefined'. If we put a while loop in there, it just loops back to the first return. \n// this is whats happening in the redux-sagas too, under the hood for e.g. takeEvery also has a while(true) loop going on.\n// function* testing() {\n//   while(true) {\n//     yield 1;\n//     yield 2;\n//     yield \"three\";\n//   }\n// }\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.props.getUsersRequest();\n  }\n\n  render() {\n    const users = this.props.users;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '0 auto',\n        padding: '20px',\n        maxWidth: '600px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, \"test\");\n  }\n\n}\n\nexport default connect(({\n  users\n}) => ({\n  users\n}), {\n  getUsersRequest\n})(App);","map":{"version":3,"sources":["/Users/mark/Desktop/code/redux-saga/redux-saga-tut/src/components/App.js"],"names":["React","Component","connect","getUsersRequest","UsersList","App","constructor","props","render","users","margin","padding","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,QAA8B,kBAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKA,KAAL,CAAWJ,eAAX;AACD;;AAEDK,EAAAA,MAAM,GAAI;AACR,UAAMC,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAzB;AAEA,wBACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,QAAT;AAAmBC,QAAAA,OAAO,EAAE,MAA5B;AAAoCC,QAAAA,QAAQ,EAAE;AAA9C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAfyB;;AAkB5B,eAAeV,OAAO,CAAC,CAAC;AAACO,EAAAA;AAAD,CAAD,MAAc;AAACA,EAAAA;AAAD,CAAd,CAAD,EAAyB;AAC7CN,EAAAA;AAD6C,CAAzB,CAAP,CAEZE,GAFY,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {getUsersRequest} from '../actions/users';\nimport UsersList from './UsersList';\n\n//when we get to the end of the function, there will be 'undefined'. If we put a while loop in there, it just loops back to the first return. \n// this is whats happening in the redux-sagas too, under the hood for e.g. takeEvery also has a while(true) loop going on.\n// function* testing() {\n//   while(true) {\n//     yield 1;\n//     yield 2;\n//     yield \"three\";\n//   }\n// }\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.props.getUsersRequest();\n  }\n\n  render () {\n    const users = this.props.users;\n\n    return (\n      <div style={{margin: '0 auto', padding: '20px', maxWidth: '600px'}}>\n        test\n      </div>\n    );\n  }\n}\n\nexport default connect(({users}) => ({users}), {\n  getUsersRequest\n})(App);\n"]},"metadata":{},"sourceType":"module"}