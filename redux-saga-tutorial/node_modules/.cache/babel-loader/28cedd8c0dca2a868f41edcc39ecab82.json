{"ast":null,"code":"//align saga structure similar to redux actions: if you have a users file in your actions, you should have one in your sagas. it will take care of all the sagas relating to users actions.\n//creating first saga to get users list:\nimport { takeEvery, call, fork } from 'redux-saga/effects';\nimport * as actions from '../actions/users';\nimport * as api from '../api/users'; //function* is a generator function\n\nfunction* getUsers() {\n  try {\n    // once this call resolves, it will assign to result\n    const result = yield call(api.getUsers); // nothing below will happen until call finishes\n\n    console.log(result);\n  } catch (e) {}\n}\n\nfunction* watchGetUsersRequest() {\n  yield takeEvery(actions.Types.GET_USERS_REQUEST, getUsers);\n}\n\nconst usersSagas = [fork(watchGetUsersRequest)];\nexport default usersSagas;","map":{"version":3,"sources":["/Users/mark/Desktop/code/redux-saga/redux-saga-tut/src/sagas/users.js"],"names":["takeEvery","call","fork","actions","api","getUsers","result","console","log","e","watchGetUsersRequest","Types","GET_USERS_REQUEST","usersSagas"],"mappings":"AAAA;AAEA;AACA,SAAQA,SAAR,EAAmBC,IAAnB,EAAyBC,IAAzB,QAAoC,oBAApC;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB,C,CAEA;;AACA,UAAUC,QAAV,GAAqB;AACnB,MAAG;AACD;AACA,UAAMC,MAAM,GAAG,MAAML,IAAI,CAACG,GAAG,CAACC,QAAL,CAAzB,CAFC,CAGD;;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,GALD,CAKC,OAAMG,CAAN,EAAQ,CAER;AACF;;AAED,UAAUC,oBAAV,GAAiC;AAC/B,QAAMV,SAAS,CAACG,OAAO,CAACQ,KAAR,CAAcC,iBAAf,EAAkCP,QAAlC,CAAf;AACD;;AAED,MAAMQ,UAAU,GAAG,CACjBX,IAAI,CAACQ,oBAAD,CADa,CAAnB;AAIA,eAAeG,UAAf","sourcesContent":["//align saga structure similar to redux actions: if you have a users file in your actions, you should have one in your sagas. it will take care of all the sagas relating to users actions.\n\n//creating first saga to get users list:\nimport {takeEvery, call, fork} from 'redux-saga/effects';\nimport * as actions from '../actions/users';\nimport * as api from '../api/users';\n\n//function* is a generator function\nfunction* getUsers() {\n  try{\n    // once this call resolves, it will assign to result\n    const result = yield call(api.getUsers);\n    // nothing below will happen until call finishes\n    console.log(result);\n  }catch(e){\n\n  }\n}\n\nfunction* watchGetUsersRequest() {\n  yield takeEvery(actions.Types.GET_USERS_REQUEST, getUsers);\n}\n\nconst usersSagas = [\n  fork(watchGetUsersRequest)\n];\n\nexport default usersSagas;"]},"metadata":{},"sourceType":"module"}